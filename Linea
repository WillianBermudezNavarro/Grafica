#ifdef __APPLE__
# include <OpenGL/gl.h>
# include <OpenGL/glu.h>
# include <GLUT/glut.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#else
# include <GL/gl.h>
# include <GL/glu.h>
# include <GL/glut.h>
#endif

using namespace std;


GLsizei winWidth =800, winHeight =600;
int x1=-1,y1=-1,x2=-1,y2=-1;
bool bandx=false, bandy=false;

void init()
{
	glClearColor(1.0, 1.0, 1.0, 1.0);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(0.0, 200.0, 0.0, 150.0);
}
void displayFcn(void)
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0,0.0,0.0); 
	glPointSize(1.0);
}

void winReshapeFcn(GLint newWidth, GLint newHeight)
{
	glViewport(0, 0, newWidth, newHeight);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D (0.0 , GLdouble(newWidth),0.0 , GLdouble( newHeight));
	winWidth = newWidth;
	winHeight = newHeight;
}

void plotPoint(GLint x, GLint y)
{
	glBegin(GL_POINTS);
	glColor3f(1,0,0);
	glVertex2i(x,y);
	glEnd();
}

inline int round (const float a) { return int (a + 0.5); }
void linea (int x0, int y0, int xEnd, int yEnd)
{
	int dx = xEnd - x0, dy = yEnd - y0, pasos, k;
	float xp, yp, x = x0, y = y0;
	if (abs (dx) > abs (dy))
		pasos = abs (dx);
	else
		pasos = abs (dy);
	xp = float (dx) / float (pasos);
	yp = float (dy) / float (pasos);
	plotPoint(round (x), round (y));
	for (k = 0; k < pasos; k++)
	{
		x += xp;
		y += yp;
		plotPoint(round (x), round (y));
	}
}

void mousePtPlot(GLint button , GLint action , GLint xMouse, GLint yMouse)
{
	if(button==GLUT_LEFT_BUTTON && action==GLUT_DOWN)
	{
		if(bandx==false)
		{
			x1=xMouse;
			y1=winHeight-yMouse;
			plotPoint(x1,y1);
			bandx=true;

		}
		else
		{
			x2=xMouse;
			y2=winHeight-yMouse;
			plotPoint(x2,y2);
			bandy=true;
		}
		if(bandx==true && bandy==true)
		{
			linea(x1,y1,x2,y2);
			x1=-1;
			y1=-1;
			x2=-1;
			y2=-1;
			bandx=false;
			bandy=false;
		}
	}
	glFlush();
	
}
int main(int argc, char**argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowPosition(200,100);
	
	glutInitWindowSize(winWidth, winHeight );
	glutCreateWindow("Mouse PlotPoints" );
	init();
	glutDisplayFunc(displayFcn);
	glutReshapeFunc(winReshapeFcn);
	glutMouseFunc(mousePtPlot);
	glutMainLoop();
}
